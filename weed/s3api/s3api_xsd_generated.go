// Code generated by xgen. DO NOT EDIT.

package s3api

// CreateBucket ...
type CreateBucket struct {
	Bucket            string             `xml:"Bucket"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
	AWSAccessKeyId    string             `xml:"AWSAccessKeyId"`
	Timestamp         string             `xml:"Timestamp"`
	Signature         string             `xml:"Signature"`
}

// MetadataEntry ...
type MetadataEntry struct {
	Name  string `xml:"Name"`
	Value string `xml:"Value"`
}

// CreateBucketResponse ...
type CreateBucketResponse struct {
	CreateBucketReturn *CreateBucketResult `xml:"CreateBucketReturn"`
}

// Status ...
type Status struct {
	Code        int    `xml:"Code"`
	Description string `xml:"Description"`
}

// Result ...
type Result struct {
	Status *Status `xml:"Status"`
}

// CreateBucketResult ...
type CreateBucketResult struct {
	BucketName string `xml:"BucketName"`
}

// DeleteBucket ...
type DeleteBucket struct {
	Bucket         string `xml:"Bucket"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// DeleteBucketResponse ...
type DeleteBucketResponse struct {
	DeleteBucketResponse *Status `xml:"DeleteBucketResponse"`
}

// BucketLoggingStatus ...
type BucketLoggingStatus struct {
	LoggingEnabled *LoggingSettings `xml:"LoggingEnabled"`
}

// LoggingSettings ...
type LoggingSettings struct {
	TargetBucket string             `xml:"TargetBucket"`
	TargetPrefix string             `xml:"TargetPrefix"`
	TargetGrants *AccessControlList `xml:"TargetGrants"`
}

// GetBucketLoggingStatus ...
type GetBucketLoggingStatus struct {
	Bucket         string `xml:"Bucket"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// GetBucketLoggingStatusResponse ...
type GetBucketLoggingStatusResponse struct {
	GetBucketLoggingStatusResponse *BucketLoggingStatus `xml:"GetBucketLoggingStatusResponse"`
}

// SetBucketLoggingStatus ...
type SetBucketLoggingStatus struct {
	Bucket              string               `xml:"Bucket"`
	AWSAccessKeyId      string               `xml:"AWSAccessKeyId"`
	Timestamp           string               `xml:"Timestamp"`
	Signature           string               `xml:"Signature"`
	Credential          string               `xml:"Credential"`
	BucketLoggingStatus *BucketLoggingStatus `xml:"BucketLoggingStatus"`
}

// SetBucketLoggingStatusResponse ...
type SetBucketLoggingStatusResponse struct {
}

// GetObjectAccessControlPolicy ...
type GetObjectAccessControlPolicy struct {
	Bucket         string `xml:"Bucket"`
	Key            string `xml:"Key"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// GetObjectAccessControlPolicyResponse ...
type GetObjectAccessControlPolicyResponse struct {
	GetObjectAccessControlPolicyResponse *AccessControlPolicy `xml:"GetObjectAccessControlPolicyResponse"`
}

// GetBucketAccessControlPolicy ...
type GetBucketAccessControlPolicy struct {
	Bucket         string `xml:"Bucket"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// GetBucketAccessControlPolicyResponse ...
type GetBucketAccessControlPolicyResponse struct {
	GetBucketAccessControlPolicyResponse *AccessControlPolicy `xml:"GetBucketAccessControlPolicyResponse"`
}

// Grantee ...
type Grantee struct {
}

// User ...
type User struct {
	*Grantee
}

// AmazonCustomerByEmail ...
type AmazonCustomerByEmail struct {
	EmailAddress string `xml:"EmailAddress"`
	*User
}

// CanonicalUser ...
type CanonicalUser struct {
	ID          string `xml:"ID"`
	DisplayName string `xml:"DisplayName"`
	*User
}

// Group ...
type Group struct {
	URI string `xml:"URI"`
	*Grantee
}

// Permission ...
type Permission string

// StorageClass ...
type StorageClass string

// Grant ...
type Grant struct {
	Grantee    *Grantee `xml:"Grantee"`
	Permission string   `xml:"Permission"`
}

// AccessControlList ...
type AccessControlList struct {
	Grant []*Grant `xml:"Grant"`
}

// CreateBucketConfiguration ...
type CreateBucketConfiguration struct {
	LocationConstraint *LocationConstraint `xml:"LocationConstraint"`
}

// LocationConstraint ...
type LocationConstraint struct {
	Value string `xml:",chardata"`
}

// AccessControlPolicy ...
type AccessControlPolicy struct {
	Owner             *CanonicalUser     `xml:"Owner"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
}

// SetObjectAccessControlPolicy ...
type SetObjectAccessControlPolicy struct {
	Bucket            string             `xml:"Bucket"`
	Key               string             `xml:"Key"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
	AWSAccessKeyId    string             `xml:"AWSAccessKeyId"`
	Timestamp         string             `xml:"Timestamp"`
	Signature         string             `xml:"Signature"`
	Credential        string             `xml:"Credential"`
}

// SetObjectAccessControlPolicyResponse ...
type SetObjectAccessControlPolicyResponse struct {
}

// SetBucketAccessControlPolicy ...
type SetBucketAccessControlPolicy struct {
	Bucket            string             `xml:"Bucket"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
	AWSAccessKeyId    string             `xml:"AWSAccessKeyId"`
	Timestamp         string             `xml:"Timestamp"`
	Signature         string             `xml:"Signature"`
	Credential        string             `xml:"Credential"`
}

// SetBucketAccessControlPolicyResponse ...
type SetBucketAccessControlPolicyResponse struct {
}

// GetObject ...
type GetObject struct {
	Bucket         string `xml:"Bucket"`
	Key            string `xml:"Key"`
	GetMetadata    bool   `xml:"GetMetadata"`
	GetData        bool   `xml:"GetData"`
	InlineData     bool   `xml:"InlineData"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// GetObjectResponse ...
type GetObjectResponse struct {
	GetObjectResponse *GetObjectResult `xml:"GetObjectResponse"`
}

// GetObjectResult ...
type GetObjectResult struct {
	Metadata     []*MetadataEntry `xml:"Metadata"`
	Data         string           `xml:"Data"`
	LastModified string           `xml:"LastModified"`
	ETag         string           `xml:"ETag"`
	*Result
}

// GetObjectExtended ...
type GetObjectExtended struct {
	Bucket                                 string   `xml:"Bucket"`
	Key                                    string   `xml:"Key"`
	GetMetadata                            bool     `xml:"GetMetadata"`
	GetData                                bool     `xml:"GetData"`
	InlineData                             bool     `xml:"InlineData"`
	ByteRangeStart                         int64    `xml:"ByteRangeStart"`
	ByteRangeEnd                           int64    `xml:"ByteRangeEnd"`
	IfModifiedSince                        string   `xml:"IfModifiedSince"`
	IfUnmodifiedSince                      string   `xml:"IfUnmodifiedSince"`
	IfMatch                                []string `xml:"IfMatch"`
	IfNoneMatch                            []string `xml:"IfNoneMatch"`
	ReturnCompleteObjectOnConditionFailure bool     `xml:"ReturnCompleteObjectOnConditionFailure"`
	AWSAccessKeyId                         string   `xml:"AWSAccessKeyId"`
	Timestamp                              string   `xml:"Timestamp"`
	Signature                              string   `xml:"Signature"`
	Credential                             string   `xml:"Credential"`
}

// GetObjectExtendedResponse ...
type GetObjectExtendedResponse struct {
	GetObjectResponse *GetObjectResult `xml:"GetObjectResponse"`
}

// PutObject ...
type PutObject struct {
	Bucket            string             `xml:"Bucket"`
	Key               string             `xml:"Key"`
	Metadata          []*MetadataEntry   `xml:"Metadata"`
	ContentLength     int64              `xml:"ContentLength"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
	StorageClass      string             `xml:"StorageClass"`
	AWSAccessKeyId    string             `xml:"AWSAccessKeyId"`
	Timestamp         string             `xml:"Timestamp"`
	Signature         string             `xml:"Signature"`
	Credential        string             `xml:"Credential"`
}

// PutObjectResponse ...
type PutObjectResponse struct {
	PutObjectResponse *PutObjectResult `xml:"PutObjectResponse"`
}

// PutObjectResult ...
type PutObjectResult struct {
	ETag         string `xml:"ETag"`
	LastModified string `xml:"LastModified"`
}

// PutObjectInline ...
type PutObjectInline struct {
	Bucket            string             `xml:"Bucket"`
	Key               string             `xml:"Key"`
	Metadata          []*MetadataEntry   `xml:"Metadata"`
	Data              string             `xml:"Data"`
	ContentLength     int64              `xml:"ContentLength"`
	AccessControlList *AccessControlList `xml:"AccessControlList"`
	StorageClass      string             `xml:"StorageClass"`
	AWSAccessKeyId    string             `xml:"AWSAccessKeyId"`
	Timestamp         string             `xml:"Timestamp"`
	Signature         string             `xml:"Signature"`
	Credential        string             `xml:"Credential"`
}

// PutObjectInlineResponse ...
type PutObjectInlineResponse struct {
	PutObjectInlineResponse *PutObjectResult `xml:"PutObjectInlineResponse"`
}

// DeleteObject ...
type DeleteObject struct {
	Bucket         string `xml:"Bucket"`
	Key            string `xml:"Key"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// DeleteObjectResponse ...
type DeleteObjectResponse struct {
	DeleteObjectResponse *Status `xml:"DeleteObjectResponse"`
}

// ListBucket ...
type ListBucket struct {
	Bucket         string `xml:"Bucket"`
	Prefix         string `xml:"Prefix"`
	Marker         string `xml:"Marker"`
	MaxKeys        int    `xml:"MaxKeys"`
	Delimiter      string `xml:"Delimiter"`
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
	Credential     string `xml:"Credential"`
}

// ListBucketResponse ...
type ListBucketResponse struct {
	ListBucketResponse *ListBucketResult `xml:"ListBucketResponse"`
}

// ListVersionsResponse ...
type ListVersionsResponse struct {
	ListVersionsResponse *ListVersionsResult `xml:"ListVersionsResponse"`
}

// ListEntry ...
type ListEntry struct {
	Key          string         `xml:"Key"`
	LastModified string         `xml:"LastModified"`
	ETag         string         `xml:"ETag"`
	Size         int64          `xml:"Size"`
	Owner        *CanonicalUser `xml:"Owner"`
	StorageClass string         `xml:"StorageClass"`
}

// VersionEntry ...
type VersionEntry struct {
	Key          string         `xml:"Key"`
	VersionId    string         `xml:"VersionId"`
	IsLatest     bool           `xml:"IsLatest"`
	LastModified string         `xml:"LastModified"`
	ETag         string         `xml:"ETag"`
	Size         int64          `xml:"Size"`
	Owner        *CanonicalUser `xml:"Owner"`
	StorageClass string         `xml:"StorageClass"`
}

// DeleteMarkerEntry ...
type DeleteMarkerEntry struct {
	Key          string         `xml:"Key"`
	VersionId    string         `xml:"VersionId"`
	IsLatest     bool           `xml:"IsLatest"`
	LastModified string         `xml:"LastModified"`
	Owner        *CanonicalUser `xml:"Owner"`
}

// PrefixEntry ...
type PrefixEntry struct {
	Prefix string `xml:"Prefix"`
}

// ListBucketResult ...
type ListBucketResult struct {
	Metadata       []*MetadataEntry `xml:"Metadata"`
	Name           string           `xml:"Name"`
	Prefix         string           `xml:"Prefix"`
	Marker         string           `xml:"Marker"`
	NextMarker     string           `xml:"NextMarker"`
	MaxKeys        int              `xml:"MaxKeys"`
	Delimiter      string           `xml:"Delimiter"`
	IsTruncated    bool             `xml:"IsTruncated"`
	Contents       []*ListEntry     `xml:"Contents"`
	CommonPrefixes []*PrefixEntry   `xml:"CommonPrefixes"`
	EncodingType   string           `xml:"EncodingType"`
}

// ListVersionsResult ...
type ListVersionsResult struct {
	Metadata            []*MetadataEntry     `xml:"Metadata"`
	Name                string               `xml:"Name"`
	Prefix              string               `xml:"Prefix"`
	KeyMarker           string               `xml:"KeyMarker"`
	VersionIdMarker     string               `xml:"VersionIdMarker"`
	NextKeyMarker       string               `xml:"NextKeyMarker"`
	NextVersionIdMarker string               `xml:"NextVersionIdMarker"`
	MaxKeys             int                  `xml:"MaxKeys"`
	Delimiter           string               `xml:"Delimiter"`
	IsTruncated         bool                 `xml:"IsTruncated"`
	Version             []*VersionEntry      `xml:"Version"`
	DeleteMarker        []*DeleteMarkerEntry `xml:"DeleteMarker"`
	CommonPrefixes      []*PrefixEntry       `xml:"CommonPrefixes"`
}

// ListAllMyBuckets ...
type ListAllMyBuckets struct {
	AWSAccessKeyId string `xml:"AWSAccessKeyId"`
	Timestamp      string `xml:"Timestamp"`
	Signature      string `xml:"Signature"`
}

// ListAllMyBucketsResponse ...
type ListAllMyBucketsResponse struct {
	ListAllMyBucketsResponse *ListAllMyBucketsResult `xml:"ListAllMyBucketsResponse"`
}

// ListAllMyBucketsEntry ...
type ListAllMyBucketsEntry struct {
	Name         string `xml:"Name"`
	CreationDate string `xml:"CreationDate"`
}

// ListAllMyBucketsResult ...
type ListAllMyBucketsResult struct {
	Owner   *CanonicalUser        `xml:"Owner"`
	Buckets *ListAllMyBucketsList `xml:"Buckets"`
}

// ListAllMyBucketsList ...
type ListAllMyBucketsList struct {
	Bucket []*ListAllMyBucketsEntry `xml:"Bucket"`
}

// PostResponse ...
type PostResponse struct {
	Location string `xml:"Location"`
	Bucket   string `xml:"Bucket"`
	Key      string `xml:"Key"`
	ETag     string `xml:"ETag"`
}

// MetadataDirective ...
type MetadataDirective string

// CopyObject ...
type CopyObject struct {
	SourceBucket                string             `xml:"SourceBucket"`
	SourceKey                   string             `xml:"SourceKey"`
	DestinationBucket           string             `xml:"DestinationBucket"`
	DestinationKey              string             `xml:"DestinationKey"`
	MetadataDirective           string             `xml:"MetadataDirective"`
	Metadata                    []*MetadataEntry   `xml:"Metadata"`
	AccessControlList           *AccessControlList `xml:"AccessControlList"`
	CopySourceIfModifiedSince   string             `xml:"CopySourceIfModifiedSince"`
	CopySourceIfUnmodifiedSince string             `xml:"CopySourceIfUnmodifiedSince"`
	CopySourceIfMatch           []string           `xml:"CopySourceIfMatch"`
	CopySourceIfNoneMatch       []string           `xml:"CopySourceIfNoneMatch"`
	StorageClass                string             `xml:"StorageClass"`
	AWSAccessKeyId              string             `xml:"AWSAccessKeyId"`
	Timestamp                   string             `xml:"Timestamp"`
	Signature                   string             `xml:"Signature"`
	Credential                  string             `xml:"Credential"`
}

// CopyObjectResponse ...
type CopyObjectResponse struct {
	CopyObjectResult *CopyObjectResult `xml:"CopyObjectResult"`
}

// CopyObjectResult ...
type CopyObjectResult struct {
	LastModified string `xml:"LastModified"`
	ETag         string `xml:"ETag"`
}

// RequestPaymentConfiguration ...
type RequestPaymentConfiguration struct {
	Payer string `xml:"Payer"`
}

// Payer ...
type Payer string

// VersioningConfiguration ...
type VersioningConfiguration struct {
	Status    string `xml:"Status"`
	MfaDelete string `xml:"MfaDelete"`
}

// MfaDeleteStatus ...
type MfaDeleteStatus string

// VersioningStatus ...
type VersioningStatus string

// NotificationConfiguration ...
type NotificationConfiguration struct {
	TopicConfiguration []*TopicConfiguration `xml:"TopicConfiguration"`
}

// TopicConfiguration ...
type TopicConfiguration struct {
	Topic string   `xml:"Topic"`
	Event []string `xml:"Event"`
}
